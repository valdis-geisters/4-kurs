% Полицейский на задании по задержанию бандита,
% табельное оружие в хранилище, сам бандит в 
% баре, а полицейский начинает "игру" дома.

% state(где я?, оружие у меня?, бандит арестован?)
% Actions:
  % move - переход из одного места в другое
  % takeGun - взять оружие
  % arrest - арестовать бандита

%Places:
  % home - начальное положение
  % storage - место где хранится оружие
  % pub - место где находится бандит

place(home).                      % факт, что home - это place
place(storage).                   % факт, что storage - это place
place(pub).                       % факт, что pub - это place 

canArrest(State1, VisitedPlaces) :-         % описываю условия при которых можно арестовать бандита
  State1 = state(_, _, arrested),           % либо состояние в котором бандит арестован - достигнуто
  write(VisitedPlaces),                     % тогда вывожу все места где побывал полицейский (наоборот);
  nl;

  action(State1, Action, State2),               % либо есть такой Action при использовании которого, я достигну 
                                                % из состояния State1 состояние State2 которое будет удовлетворять
                                                % правило canArrest (возможна рекурсия);
  not(member(State2, VisitedPlaces)),           % при этом, налагаем условие, не повторять уже совершенных состояний 
  canArrest(State2, [State2 | VisitedPlaces]).  % добавляем текущее состояник в стек.

action(                                         % описание условий при который возможно произвести арест:
  state(pub, has, _),                           % полицейский должен находиться в баре, и у него дб оружие;
  arrest,                                       % чтобы можно было выполнить действие arrest;
  state(pub, has, arrested)                     % тогда полицейский будет находиться в пабе, с оружием, и 
).                                              % уже арестованным бандитом.


action(                                         % описание условий при который возможно взять оружие:
  state(storage, hasnot, IsArrested),           % полицейский должен находиться в хранилище, и у него не дб оружия;
  takeGun,                                      % чтобы можно было выполнить действие arrest;
  state(storage, has, IsArrested)               % тогда, полицейский будет находиться в хранилище, и с оружием.
).

action(                                         % описание действия move:
  state(_, HasGun, IsArrested),                 % полицейский из любого состояния
  move,                                         % может
  state(Place, HasGun, IsArrested)              % перейти в другое место,
) :- place(Place).                              % при этом выбранное место, должно относиться к places.

initial(                                        % инициализация моего начального состояния
  state(home, hasnot, arrested)
).

% initial(State), canArrest(State, []).     % вопрос
1. Система общих типов CTS. Что это такое?
Система общих типов CTS определяет способ объявления, использования и управления типами в среде CLR, а также является важной составной частью поддержки межъязоковой интеграции в среде выполнения.
2. Какие функции выполняет CTS?
  * Формирует инфраструктуру, которая позволяет обеспечивать межъязыковую интеграцию,
    безопасность типов и высокопроизводительное выполнение кода.
  * Представляет объектно-ориентированную модель, поддерживающую полнуб реализацию
    многих ЯП.
  * Определяет правила, которых необходимо придерживаться в языке. Эти правила помогают
    обеспечивать взаимодействие объектов, написанных на разных языках.
  * Предоставляет библиотеку, которая содержит типы-примитивы используемые в разработке
    приложений.
3. Все типа .net делятся на типы значения и ссылочные. Определение этих типов?
Значимые типы - это типы данных, объекты которых представлены фактическим значением объекта. Если экземпляр типа значения присваивается переменной, то эта переменная получает новую копию значения. Хранится в ячейках.
Ссылочные типы - это типы данных, объекты которых представлены ссылкой на фактическое значение объекта. Если экземпляр ссылочного типа присваивается переменной, то эта переменная будет ссылаться на исходное значение. Копирование не происходит. Описывают так называемые объектные ссылки и представляют адреса объектов. Хранится в куче объекты, ссылки в ячейках.
4. Перечислить типы значений и ссылочные типы.
К типам значения относяться:
  * Встроенные типы значений
  * Пользовательские типы значений (структура)
  * Перечисления
К ссылочным:
  * Типы указателей (управляемые и не управляемые)
  * Самодокументированные типы
    ** Массивы
    ** Типы классов
      *** Делегаты - анологичны указателям на функции в C++.
      *** Пользовательские ссылочные типы
      *** Упакованные типы значений
  * Интерфейсы - задает контракт, определяющий отношение типа "может" или "имеет". именованные коллекции определений абстрактных членов, которые могут 
    поддерживаться
5. 